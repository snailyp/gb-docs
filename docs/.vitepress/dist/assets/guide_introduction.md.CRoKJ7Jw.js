import{_ as n,c as t,o,ae as e}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"项目介绍 ✨","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md"}'),r={name:"guide/introduction.md"};function l(s,i,a,g,d,c){return o(),t("div",null,i[0]||(i[0]=[e('<h1 id="项目介绍-✨" tabindex="-1">项目介绍 ✨ <a class="header-anchor" href="#项目介绍-✨" aria-label="Permalink to &quot;项目介绍 ✨&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>Gemini Balance 是一个基于 Python FastAPI 构建的强大应用程序，旨在为您提供 Google Gemini API 的代理和负载均衡功能。🚀 它可以帮助您轻松管理多个 Gemini API Key，并通过简单的配置实现 Key 的智能轮询、安全认证、灵活模型过滤和实时状态监控。此外，我们还集成了便捷的图像生成和多种图床上传功能，并贴心地支持 OpenAI API 格式的代理，让您的开发更加顺畅！</p><h2 id="主要功能" tabindex="-1">主要功能 <a class="header-anchor" href="#主要功能" aria-label="Permalink to &quot;主要功能&quot;">​</a></h2><ul><li><strong>多 Key 负载均衡</strong>: 轻松配置多个 Gemini API Key，实现智能轮询，提高可用性。🔄</li><li><strong>可视化配置即时生效</strong>: 在管理后台修改配置，无需重启服务，即刻生效！⚡</li><li><strong>双协议API 兼容</strong>: 同时支持 Gemini 和 OpenAI 格式的 CHAT API 请求转发，兼容性更强。🤝</li><li><strong>支持图文对话和修改图片</strong>: 特定模型支持图文对话和强大的修图功能。🖼️</li><li><strong>支持联网搜索</strong>: 特定模型支持联网搜索，获取实时信息。🌐</li><li><strong>Key 状态监控</strong>: 提供直观的可视化页面，实时监控各 Key 的状态和使用情况。📊</li><li><strong>详细的日志记录</strong>: 提供详细的错误日志，助您快速定位和解决问题。📜</li><li><strong>支持自定义Gemini代理</strong>: 灵活配置自定义的 Gemini API 代理地址。🔗</li><li><strong>OpenAI画图接口兼容</strong>: 兼容 OpenAI 的图像生成接口，扩展您的创意空间。🎨</li><li><strong>灵活的密钥添加方式</strong>: 支持通过正则表达式批量添加密钥，并自动去重，省时省力。🔑</li><li><strong>兼容OpenAI格式Embeddings接口</strong>: 完美适配 OpenAI 格式的 embeddings 接口。🧠</li><li><strong>流式响应优化</strong>: 可选的流式输出优化器，带来更流畅的交互体验。💨</li><li><strong>失败重试与 Key 管理</strong>: 智能处理 API 请求失败，自动重试并管理失效 Key。🛡️</li><li><strong>Docker 支持</strong>: 提供 AMD 和 ARM 架构的 Docker 镜像，部署更便捷。🐳</li><li><strong>模型列表自动维护</strong>: 自动获取并兼容 OpenAI/Gemini 模型列表，始终保持最新。📋</li><li><strong>支持移除不使用的模型</strong>: 通过配置轻松过滤掉不需要的模型。🗑️</li></ul><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><ul><li><strong>后端</strong>: Python, FastAPI, Uvicorn 🐍</li><li><strong>数据库</strong>: MySQL (根据配置项推断) 💾</li><li><strong>部署</strong>: Docker 📦</li></ul>',7)]))}const m=n(r,[["render",l]]);export{u as __pageData,m as default};
